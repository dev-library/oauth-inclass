# --- Server Configuration ---
spring.application.name=oauth-inclass
server.port=8001

# --- Database Configuration ---
# ?? MySQL ?????? ?? ??
spring.datasource.url=jdbc:mysql://localhost:4406/civic_insights
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# --- JPA/Hibernate Configuration ---
# ?????? ?? ? ???? ?? DDL ?? ?? (?? ? ??)
spring.jpa.hibernate.ddl-auto=create
# ???? SQL ??? ??? ??
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# --- Database Initialization ---
# ?????? ?? ? schema.sql ??
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true

# --- OAuth2 Configuration ---
# OAuth2 client-id and client-secret are managed in application-config.properties
# Use config profile to reference sensitive OAuth2 credentials
spring.profiles.include=config

# --- Google OAuth2 Configuration ---
spring.security.oauth2.client.registration.google.client-id=${google.provider-client-id}
spring.security.oauth2.client.registration.google.client-secret=${google.provider-client-secret}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI_INCLASS:http://localhost:8001/api/v1/auth/login/oauth2/code/google}

# --- Kakao OAuth2 Configuration ---
spring.security.oauth2.client.registration.kakao.client-id=${kakao.provider-client-id}
spring.security.oauth2.client.registration.kakao.client-secret=${kakao.provider-client-secret}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI_INCLASS:http://localhost:8001/api/v1/auth/login/oauth2/code/kakao}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# --- Naver OAuth2 Configuration ---
spring.security.oauth2.client.registration.naver.client-id=${naver.provider-client-id}
spring.security.oauth2.client.registration.naver.client-secret=${naver.provider-client-secret}
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI_INCLASS:http://localhost:8001/api/v1/auth/login/oauth2/code/naver}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver


# --- JWT Configuration --- (RSA ???? ?? ?? ??)
app.jwt.expiration-ms=86400000
app.jwt.refresh-expiration=604800000

# --- SpringDoc OpenAPI (Swagger) Configuration ---
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.try-it-out-enabled=true
